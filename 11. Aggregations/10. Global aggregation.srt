1
00:00:02,500 --> 00:00:04,900
先ほどは､ ドキュメントをフィルタリングする方法を説明しました｡ 

2
00:00:04,900 --> 00:00:08,050
しかし､ この講義では､ ちょっと逆のことをやってみようかと思います｡ 

3
00:00:08,440 --> 00:00:14,800
Globalという名前のアグリゲーションを使うことで､ いわばアグリゲーションのコンテキストから抜け出すことができるのです｡ 

4
00:00:15,010 --> 00:00:20,650
これは､ 通常アグリゲーションが使用する文書群を絞り込むクエリを入れても､

5
00:00:20,650 --> 00:00:26,740
クエリがないかのようにすべての文書にアクセスできることを意味する｡

6
00:00:26,890 --> 00:00:28,480
その一例を見てみましょう｡ 

7
00:00:28,990 --> 00:00:34,420
そこで､ 通常集計する文書群を絞り込む簡単なクエリをロードしています｡ 

8
00:00:34,420 --> 00:00:38,410
つまり､ このクエリは総量が少なくとも100の文書にマッチする｡ 

9
00:00:38,830 --> 00:00:44,410
このコンテキストから抜け出して､ 代わりに全文書を集約するグローバルアグリゲーションを追加してみよう｡ 

10
00:00:45,100 --> 00:00:52,720
そこで､ ここにXキーを追加して､ all orders aggregation with type of globalとします｡ 

11
00:00:53,080 --> 00:01:00,160
つまり､ この集計は､ 基本的にすべての文書にアクセスすることを意味し､ 総量が100以上の文書だけにアクセスするわけではありません｡

12
00:01:00,790 --> 00:01:02,170
これでバケツができるわけです｡ 

13
00:01:02,170 --> 00:01:06,760
そこで､ そのバケットにサブアグリゲーションを追加して､ 何かしてみましょう｡ 

14
00:01:07,630 --> 00:01:18,550
stats amountsと名付け､ total amountsのフィールドを持つstats typeを使用してクエリを実行することにします｡ 

15
00:01:18,580 --> 00:01:26,020
クエリがマッチした489文書ではなく､ 集計のための文書数が1000であることに注目してください｡ 

16
00:01:26,260 --> 00:01:30,610
それは､ グローバルアグリゲーションが検索クエリに影響されないからだ｡ 

17
00:01:30,640 --> 00:01:39,000
その代わりに､ クエリを実行するインデックスとタイプのコンテキストを使用し､ このコンテキスト内で利用可能なすべてのドキュメントを使用します｡

18
00:01:39,010 --> 00:01:41,260
つまり､ 暗黙のうちに､ マッチオールクエリです｡ 

19
00:01:41,950 --> 00:01:42,520
わかりました｡ 

20
00:01:42,520 --> 00:01:46,330
もう一つ､ グローバルでないアグリゲーションを追加してみましょう｡ 

21
00:01:46,870 --> 00:01:54,370
そこで､ 全注文の分離と同じレベルで､ stats underscore expensiveという名前を付けて､ 合計金額のフィールドにもstats

22
00:01:57,100 --> 00:02:02,590
aggregationを使用することにします｡

23
00:02:03,430 --> 00:02:04,840
さっそく実行してみましょう｡ 

24
00:02:05,580 --> 00:02:06,930
そこで､ このクエリを実行する｡ 

25
00:02:06,960 --> 00:02:11,460
集計に489個の文書が使われていることに注目してください｡ 

26
00:02:11,940 --> 00:02:14,640
これらは､ クエリにマッチした文書である｡ 

27
00:02:14,670 --> 00:02:20,700
新しい集計はグローバル集計ではないので､ 検索クエリの文脈を利用し､

28
00:02:20,700 --> 00:02:26,250
総量が100以上の文書を489文書に絞り込んだ｡

29
00:02:26,490 --> 00:02:29,460
それは､ 単純にグローバルアグリゲーションを使わなかったからです｡ 

30
00:02:29,700 --> 00:02:36,810
これは､ アグリゲーションが算出した統計値を見れば､ 金額が高くなっていることからも明らかです｡

31
00:02:37,590 --> 00:02:44,640
そしてそれは､ クエリによって集約用コンテキストの文書群が絞り込まれたとしても､ グローバルなコンテクストで集約する方法である｡

32
00:02:45,060 --> 00:02:51,420
注意点としては､ グローバルアグリゲーションはアグリゲーションサブジェクトのトップレベルにしか配置できないことである｡

33
00:02:51,570 --> 00:02:56,280
グローバルアグリゲーションをサブアグリゲーションとして配置するのは､ どう考えても意味がないので､

34
00:02:56,280 --> 00:02:58,110
それは問題ないのですが｡
