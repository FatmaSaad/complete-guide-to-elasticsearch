1

00:00:02,610  -->  00:00:07,260
In the previous lecture, I showed an example
of how we could change the name of a field

2

00:00:07,260  -->  00:00:09,940
when reindexing documents into a new index.

3

00:00:10,820  -->  00:00:16,620
That’s useful if you need to reindex documents
anyway, but if you have millions of documents,

4

00:00:16,660  -->  00:00:22,020
it’s probably not worth the effort to reindex
them just for the sake of renaming a field.

5

00:00:23,320  -->  00:00:28,680
In this lecture I will show you an alternative
that doesn’t require documents to be reindexed.

6

00:00:30,360  -->  00:00:33,620
What we can do instead, is to use aliases.

7

00:00:34,160  -->  00:00:38,480
Let’s implement the example from the previous
lecture, being to change the “content”

8

00:00:38,480  -->  00:00:39,940
field to “comment.”

9

00:00:40,760  -->  00:00:45,920
Instead of actually renaming the field, we
can add an alias pointing to the actual field,

10

00:00:46,300  -->  00:00:49,980
which we can then use in our queries instead
of the original name.

11

00:00:50,820  -->  00:00:55,520
The way we do that is to add a new field mapping,
which you have seen how to do already.

12

00:00:56,400  -->  00:01:01,560
We use a data type named “alias” and specify
the aliase’s target field name within a

13

00:01:01,620  -->  00:01:03,260
parameter named “path.”

14

00:01:03,720  -->  00:01:04,980
Let’s type that out.

15

00:01:25,500  -->  00:01:31,160
two search queries prepared that simply search
the original field and the alias, respectively.

16

00:01:31,960  -->  00:01:36,040
I’m sure you can imagine that the first
query works as it always has, but let’s

17

00:01:36,060  -->  00:01:38,340
quickly run it to be sure.

18

00:01:41,660  -->  00:01:45,560
If we specify the “comment” field instead,
we should get the same results.

19

00:01:48,060  -->  00:01:49,800
Indeed the results are the same.

20

00:01:50,560  -->  00:01:55,460
A field alias is useful in situations where
you want to rename a field but don’t want

21

00:01:55,460  -->  00:01:58,420
to reindex data just for that purpose.

22

00:01:59,240  -->  00:02:03,820
While adding an alias does not get rid of
the existing field mapping, it does let you

23

00:02:03,880  -->  00:02:05,980
query a field by a different name.

24

00:02:07,540  -->  00:02:13,140
A field alias is actually one of the few examples
of mappings that can be updated.

25

00:02:13,660  -->  00:02:15,960
Not its name, but its target field.

26

00:02:16,740  -->  00:02:21,660
If you want to change the field that an alias
points to, you can simply perform a mapping

27

00:02:21,660  -->  00:02:24,180
update with a new value for the “path”
parameter.

28

00:02:25,220  -->  00:02:29,780
That’s possible because an alias has no
influence on how values are indexed; it is

29

00:02:30,180  -->  00:02:35,540
simply a construct used when parsing queries,
whether it’s a search or index request.

30

00:02:37,520  -->  00:02:42,260
On the diagram, you can see how the “comment”
alias is translated into the field name that

31

00:02:42,300  -->  00:02:46,260
it points to for both an index request and
a search query.

32

00:02:47,060  -->  00:02:52,760
After translating the alias into the original
field name, a query is handled in exactly

33

00:02:52,820  -->  00:02:56,420
the same way as it would have if the original
field name was specified.

34

00:02:57,640  -->  00:03:00,600
That’s essentially all there is to field
aliases.

35

00:03:01,200  -->  00:03:05,860
There are a few limitations in how you can
use them, but none that you are likely to

36

00:03:05,860  -->  00:03:11,760
come across; for all common use cases, you
can utilize aliases as you would expect.

37

00:03:13,280  -->  00:03:18,780
It is also possible to configure index aliases
at the cluster level, which is useful in a

38

00:03:18,780  -->  00:03:23,480
number of use cases, particularly when dealing
with high volumes of data.

39

00:03:24,120  -->  00:03:28,240
Anyway, I don’t want to get into that in
this section of the course, but I just wanted

40

00:03:28,249  -->  00:03:30,099
to mention it because it is related.
