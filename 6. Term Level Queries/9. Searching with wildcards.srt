1
00:00:02,390 --> 00:00:08,360
Elasticsearchは様々な動的ルールをサポートしており､ その一つがワイルドカードクエリです｡ 

2
00:00:08,690 --> 00:00:15,440
このクエリでは､ クエリというかタームの中にワイルドカードを追加できることは､ あまり驚かれないと思うんです｡

3
00:00:15,860 --> 00:00:21,020
使用できる文字は､ アスタリスクとクエスチョンマークの2つです｡ 

4
00:00:21,260 --> 00:00:29,480
アスタリスクは無文字を含むあらゆる文字列にマッチし､ クエスチョンマークは任意の1文字にマッチします｡

5
00:00:29,990 --> 00:00:36,230
野菜という言葉を検索���､ その一部をアスタリスクから始まる2つのワイルドカードで置き換えてみましょう｡

6
00:00:36,470 --> 00:00:46,550
そこで､ テキストフィールドとキーワードマッピングにワイルドカードクエリを入力し､ パラメータを追加する必要がないので構文を簡略化し､

7
00:00:46,550 --> 00:00:53,150
野菜と用語の一部を置換して挿入することにしましょう｡

8
00:00:53,840 --> 00:01:02,300
では､ これらの文字がすべてこの代わりにアスタリスクを入力すると仮定して､ 実行してみましょう｡ 

9
00:01:02,660 --> 00:01:12,290
つまり､ このクエリは､ textフィールドにveggieで始まりBLTで終わる用語が含まれる文書にマッチする｡

10
00:01:12,710 --> 00:01:17,240
その間にどんな文字があってもいいし､ 0を含むいくつでもいい｡ 

11
00:01:17,720 --> 00:01:22,610
見ての通り､ このクエリは､ テキストフィールドの用語「野菜」を含む文書にマッチする｡ 

12
00:01:25,760 --> 00:01:32,810
アスタリスクをクエスチョンマークに変えてみて､ どうなるか､ もう一度クエリを実行してみましょう｡ 

13
00:01:33,110 --> 00:01:35,030
これで､ どの文書もマッチングされなくなりました｡ 

14
00:01:35,330 --> 00:01:41,600
クエスチョンマークは任意の1文字にマッチしますが､ テストデータでは何もマッチしないことを思い出してください｡

15
00:01:41,750 --> 00:01:49,820
しかし､ 試しにクエスチョンマークの前にEとCの文字を加えてみると､ 野菜の用語を含む文書が再びマッチングされることが確認できる｡

16
00:01:50,180 --> 00:01:52,790
そこでEとCで､ クエリを実行します｡ 

17
00:01:53,390 --> 00:01:54,560
そして､ そこに行く｡ 

18
00:01:54,590 --> 00:01:56,690
野菜のタグが再びマッチングされる｡ 

19
00:01:57,200 --> 00:02:00,680
つまり､ クエリーをもう少しダイナミックにする簡単な方法なのです｡ 

20
00:02:01,010 --> 00:02:05,570
この講演を終える前に､ パフォーマンスに関して1つだけ触れておきたいことがあります｡ 

21
00:02:05,690 --> 00:02:10,570
ワイルドカードクエリーは､ 多くの用語を繰り返し処理する必要があるため､ 処理速度が遅くなることがあります｡ 

22
00:02:10,580 --> 00:02:15,350
注意しなければならないのは､ ワイルドカードを用語の先頭に置くことです｡ 

23
00:02:15,740 --> 00:02:21,260
アスタリスクやクエスチョンマークを先頭に置くと､ クエリーが極端に遅くなることがあります｡ 

24
00:02:21,260 --> 00:02:23,180
だから､ これは避けた方がいい｡ 

25
00:02:23,390 --> 00:02:30,310
また､ 開発マシンでは遅くなくても､ 何百万ものドキュメントを扱うクラスタではそうもいかないことを忘れてはならない｡

26
00:02:30,320 --> 00:02:33,380
そのため､ ワイルドカードクエリを記述する際には､ この点に注意してください｡ 
