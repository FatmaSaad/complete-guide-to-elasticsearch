1
00:00:02,530 --> 00:00:08,650
この短い講義では､ 用語クエリを使用して複数の用語の検索を実行する方法を簡単に紹介したいと思います｡

2
00:00:09,100 --> 00:00:16,030
これは､ 複数の用語を検索することを除いて､ 用語クエリと同じ特性である｡

3
00:00:16,210 --> 00:00:18,100
単一の値を提供するのではなく

4
00:00:18,130 --> 00:00:25,630
ドキュメントが､ 指定したフィールドに指定した値のいずれかを含んでいる場合にマッチする値の配列を提供します｡

5
00:00:25,930 --> 00:00:32,140
Elasticsearchが各テキストフィールドをフルテキストフィールドとキーワードフィールドの両方に自動的にマッピングすることを思い出してください｡ 

6
00:00:32,560 --> 00:00:38,380
Elasticsearchはダイナミックマッピングでこれを実現しており､ コースの前半で私たち自身が手動でこれを行いました｡ 

7
00:00:38,740 --> 00:00:43,060
このようなフィールドは､ マルチフィールドと呼ばれ､ ご記憶にある方も多いと思います｡ 

8
00:00:43,540 --> 00:00:46,210
これは例えばテキストフィールドの場合です｡ 

9
00:00:46,210 --> 00:00:47,650
では､ そちらを使ってみましょう｡ 

10
00:00:47,740 --> 00:00:53,760
用語レベルのクエリを使用しているため､ 正確な値を探しているため､ キーワードマッピングをクエリしたいのです｡

11
00:00:53,770 --> 00:00:55,180
それを実際に見てみましょう｡ 

12
00:00:55,630 --> 00:01:01,750
そのため､ 従来通り､ 製品のデフォルトと検索APIを取得します｡ 

13
00:01:03,770 --> 00:01:11,870
要求本文のクエリオブジェクトとクエリのタイプは用語であり､ フィールドは､ キーワードマッピングを使用するテキストドットキーワードになり､

14
00:01:11,870 --> 00:01:16,280
ここで我々は､ 単に値を入力することができます｡

15
00:01:16,280 --> 00:01:18,410
そこで､ 配列として検索したいのです｡ 

16
00:01:18,890 --> 00:01:20,180
つまり､ 文字列の配列です｡ 

17
00:01:20,180 --> 00:01:25,700
この例では､ スープとケーキを検索してみます｡ 

18
00:01:27,820 --> 00:01:32,170
検索結果内には､ cakeという言葉がマッチした文書が表示されます｡ 

19
00:01:32,350 --> 00:01:37,600
しかし､ スクロールしていくと､ そのテキストフィールド内にsoupという言葉を含む文書も出てきます｡ 

20
00:01:38,850 --> 00:01:45,020
そして､ 複数の用語を一度に検索するのは､ リレーショナルデータベースに詳しい方ならSQLの句と同じようなもので､

21
00:01:45,030 --> 00:01:47,760
それだけ簡単だということです｡
