1
00:00:02,320 --> 00:00:12,930
このセクションの前半では､ クエリの継承がジョイントフィールドにも使用できる場合を除き､ どのネストされたオブジェクトが一致するドキュメントのコストを確認するためにネストされた内側のヒットを使用する方法を見ました｡

2
00:00:12,940 --> 00:00:15,010
では､ 今回の講義では､ その辺りを見ていきましょう｡ 

3
00:00:15,250 --> 00:00:22,060
やり方は先ほどと全く同じですが､ どのクエリを使うかによって､ 返されるインナーヒットが変わってきます｡

4
00:00:22,690 --> 00:00:30,310
まず､ 以前の講義で見たHess underscore childのクエリのインナーヒットを返してみましょう｡ クエリはすでに貼り付けてあります｡

5
00:00:30,310 --> 00:00:34,810
というわけで､ あとはinner underscore hitsオプションを付けて実行するだけです｡ 

6
00:00:34,810 --> 00:00:36,760
では､ そのようにしましょう｡ 

7
00:00:37,210 --> 00:00:43,660
そこで､ ここに内側のアンダースコアのヒットオプションを追加して､ 値として空のオブジェクトを追加してみます｡ 

8
00:00:44,450 --> 00:00:46,430
そして､ 実行に移しましょう｡ 

9
00:00:47,300 --> 00:00:53,510
このクエリは､ 内部ヒットを含む場合､ 定義クエリに一致する従業員を持つ部門を返します｡ 

10
00:00:53,510 --> 00:00:57,950
クエリにマッチする各部門のコスト社員がわかるようになったのです｡ 

11
00:00:58,130 --> 00:01:07,880
この特定のクエリでは､ Daniel Harrisという従業員が指定したクエリにマッチし､ Hessのアンダースコアの子クエリが開発部門のものにマッチすることになりました｡

12
00:01:08,660 --> 00:01:11,810
Hessのアンダースコアの親クエリでもアプローチは同じです｡ 

13
00:01:11,810 --> 00:01:13,670
では､ さっそくその様子をご覧いただきましょう｡ 

14
00:01:13,940 --> 00:01:16,040
だから､ その問い合わせはここに書いてあるんです｡ 

15
00:01:16,550 --> 00:01:23,420
そこで､ 上記のクエリと全く同じように､ inner underscore hits オプションを追加して実行してみることにする｡

16
00:01:24,870 --> 00:01:31,590
このクエリは､ 内側のヒットも含めて定義した粗いものと一致する見かけを持つ子文書にマッチする｡

17
00:01:31,590 --> 00:01:36,630
その結果の中で､ 各従業員がどの部門のコストでマッチングしたのかを確認できるようになったのです｡ 

18
00:01:36,720 --> 00:01:42,240
つまり､ 与えられた子文書がどの親文書にかかる費用で返されるかを知ることができるのである｡ 

19
00:01:42,570 --> 00:01:49,780
このクエリでは､ 開発部門がヒットするのは当然ですが､ より現実的なシナリオを想定しています｡

20
00:01:49,800 --> 00:01:52,980
クエリーは､ 複数の部門にマッチするようなものになる｡ 

21
00:01:53,130 --> 00:02:00,120
とはいえ､ ポイントは押さえていて､ John Fieldsを使ったクエリのヒットで返すのはこれだけです｡
