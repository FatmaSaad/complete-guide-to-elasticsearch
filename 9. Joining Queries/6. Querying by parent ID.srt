1
00:00:02,270 --> 00:00:06,110
文書関係の文脈で最初のクエリを書く時が来た｡ 

2
00:00:06,140 --> 00:00:12,350
まずは､ 親文書のIDを元に子文書を返すという､ 非常にシンプルなクエリから始めてみましょう｡

3
00:00:12,620 --> 00:00:20,210
このクエリは parent underscore ID という名前で､ この例では指定された部門の従業員を取得するために使用します｡

4
00:00:20,690 --> 00:00:23,570
では､ まずクエリーオブジェクトを追加してみましょう｡ 

5
00:00:23,870 --> 00:00:29,030
ということで､ クエリはスコアIDにparentという名前で､ とりあえず空のオブジェクトを追加しておきます｡ 

6
00:00:29,570 --> 00:00:35,660
まず､ typeというオプションを追加して､ Elasticsearchにどのリレーションをクエリしたいかを伝える必要があります｡ 

7
00:00:36,110 --> 00:00:38,750
このような文書が返ってくることを望んでいるのです｡ 

8
00:00:38,750 --> 00:00:43,100
そこで､ ここでは子リレーション・タイプの名前をemployeeと入力することにします｡ 

9
00:00:43,400 --> 00:00:44,950
だから､ そうしよう｡ 

10
00:00:44,960 --> 00:00:48,320
つまり､ 型と社員が値なんですね｡ 

11
00:00:48,770 --> 00:00:53,720
また､ 部門である親文書のIDを指定する必要があります｡ 

12
00:00:53,780 --> 00:00:56,810
これは､ IDというオプションを追加することで行います｡ 

13
00:00:57,050 --> 00:01:00,350
最初の部門を選んで､ 値として1を入力することにします｡ 

14
00:01:00,800 --> 00:01:03,140
だからIDで一本｡ 

15
00:01:03,680 --> 00:01:04,400
それだけです｡ 

16
00:01:04,430 --> 00:01:07,550
クエリを実行して､ 期待通りの結果が得られるかどうか見てみましょう｡ 

17
00:01:09,680 --> 00:01:16,580
その結果､ クエリがドキュメントにマッチしていることがわかります｡ これは､ テストデータに基づいて予想されたことです｡

18
00:01:17,000 --> 00:01:22,760
親IDを2に変更すると､ クエリは代わりに社員と他の部門にマッチするはずです｡ 

19
00:01:22,790 --> 00:01:26,570
では､ それをやってみましょうと､ もう一度実行します｡ 

20
00:01:27,050 --> 00:01:30,590
そして実際に､ 結果の中に他の社員が見えるようになりました｡ 

21
00:01:31,200 --> 00:01:33,320
このクエリは本当にそれだけなんです｡ 

22
00:01:33,350 --> 00:01:34,910
簡単だと言ったはずだ｡ 

23
00:01:35,360 --> 00:01:39,890
講義を終える前に､ 検索結果について2点だけ触れておきたい｡ 

24
00:01:40,040 --> 00:01:45,500
まず､ ヒットにはアンダースコアのソースキーにjoinフィールドが含まれていることに注目してください｡ 

25
00:01:45,860 --> 00:01:55,460
この場合､ クエリタイムに両方の値を知っているので､ これは役に立たないが､ 他のクエリでは､ マッチしたドキュメントのタイプをチェックすることが関連するかもしれない｡

26
00:01:55,850 --> 00:02:01,400
次に､ アンダースコアのルーティングキーが含まれており､ その値が2であることに注目する｡ 

27
00:02:01,850 --> 00:02:05,120
この番号は､ 親文書のIDに一致する｡ 

28
00:02:05,150 --> 00:02:13,040
親ドキュメントとその子ドキュメントはすべて同じチャートに配置されなければならないことは､ 前回の講義でも触れましたので覚えておいてください｡

29
00:02:13,490 --> 00:02:24,170
ルーティングの話をもう一度したのは､ 親のアンダースコアIDクエリを使う場合､ IDオプションに渡す値が自動的にルーティングの値として使われることを示すためです｡

30
00:02:24,440 --> 00:02:32,450
つまり､ Elasticsearchは自動的に親ドキュメントのIDを利用して､ ドキュメントがどのショットに配置されるかを把握するのです｡

31
00:02:32,810 --> 00:02:37,770
これはあくまでデフォルトの動作であり､ ルーティングクエリパラメータで上書きすることが可能です｡ 

32
00:02:37,790 --> 00:02:41,750
カスタムルーティングをしたのならともかく､ そんな一般的なものではありませんからね｡ 

33
00:02:42,230 --> 00:02:47,030
もし､ これらのことが頭から抜け落ちていたとしても､ それは単なる背景知識であり､ 親アンダースコアIDクエリを使用する際に理解することは必須ではありませんから､

34
00:02:47,030 --> 00:02:51,410
気にしないでください｡
