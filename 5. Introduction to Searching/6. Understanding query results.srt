1
00:00:02,270 --> 00:00:07,460
さて､ 検索クエリをいくつか書いたところで､ ちょっと検索結果について話してみましょう｡ 

2
00:00:07,640 --> 00:00:12,410
まだmatch allのクエリの結果を開いていて､ 右側に表示されています｡ 

3
00:00:12,950 --> 00:00:16,700
上から順番に､ JSONオブジェクトの中を下っていきましょう｡ 

4
00:00:16,790 --> 00:00:23,720
まず､ takeプロパティは､ クエリの実行に要したミリ秒数を表す整数値である｡

5
00:00:24,140 --> 00:00:31,970
これは､ 検索要求がタイムアウトしたかどうかを示す単なるフラグである｡

6
00:00:32,390 --> 00:00:35,180
そして､ それらのコースチャートに名前をつけたオブジェクトを用意します｡ 

7
00:00:35,210 --> 00:00:42,050
このオブジェクトは､ 検索されたシャードの総数と､ 正常に完了したシャードの数､ または失敗したシャードの数を含んでいます｡

8
00:00:42,590 --> 00:00:49,070
これらはすべて有用な情報かもしれませんが､ 通常､ タイムアウトのプロパティを除いてはそれほど関連性のない情報です｡

9
00:00:49,130 --> 00:00:53,990
メインとなるのは､ 検索結果を格納したhitsオブジェクトである｡ 

10
00:00:54,230 --> 00:01:00,800
このオブジェクトの中に､ 検索条件に一致する文書の総数を含むtotalプロパティがある｡

11
00:01:01,280 --> 00:01:07,930
ヒット・オブジェクトは､ 実際にはHiggsプロパティそのものを持ち､ これはマッチ・ドキュメントを含む配列である｡ 

12
00:01:07,940 --> 00:01:13,220
デフォルトでは､ 最初の10個の文書が返されますが､ これは変更可能です｡ 後ほど説明するように､

13
00:01:13,220 --> 00:01:21,590
マッチした文書にはアンダースコアのスコアのプロパティがあり､ これは文書が検索クエリにどれだけマッチしているかを示す数値です｡

14
00:01:21,830 --> 00:01:28,010
このクエリは全一致クエリなので､ これらはすべて1つに設定されていますが､ どのように異なるかはすぐにわかるでしょう｡

15
00:01:28,490 --> 00:01:34,970
ヒットオブジェクトの中には､ マッチした文書の中で最も高いスコアを格納するmax scoreプロパティがあります｡

16
00:01:35,150 --> 00:01:43,370
デフォルトでは､ マッチは関連するスコアでソートされるため､ このプロパティにはネストされたヒット配列内の最初のドキュメントのスコアが格納されます｡

17
00:01:43,490 --> 00:01:44,370
それだけです｡ 

18
00:01:44,390 --> 00:01:49,070
これらは､ 検索クエリを送信した際に､ Elasticsearchからのレスポンスを構成するプロパティでした｡ 

19
00:01:49,400 --> 00:01:53,000
関連性スコアと呼ばれるものについて､ 少しお話したことにお気づきでしょうか｡ 

20
00:01:53,030 --> 00:01:54,470
それはどういうことですか？

21
00:01:54,500 --> 00:01:56,720
それについては､ 次回の講義でお話ししましょう｡ 
