1
00:00:02,510 --> 00:00:09,050
リクエストUIを使った検索の基本を見たので､ 次はクエリのdstlに注目しましょう｡

2
00:00:09,350 --> 00:00:16,250
Dstlへの問い合わせは､ リクエストURIの代わりにJSONオブジェクトで検索クエリを指定する方法を使用しています｡

3
00:00:16,910 --> 00:00:23,120
これは､ ドキュメントの追加や更新を行ったときと同様ですが､ もちろんオブジェクトの構造は異なります｡

4
00:00:23,860 --> 00:00:29,710
クエリDSLには､ ライブクエリと複合クエリの2つの主要なグループがある｡ 

5
00:00:29,740 --> 00:00:32,680
専門用語はそれほど重要ではないので､ 覚えておくとよいでしょう｡ 

6
00:00:32,890 --> 00:00:43,510
基本的な考え方は､ ライブクエリが特定のフィールド内の値を検索するのに対し､ 複合クエリは複数のリーフクエリまたは複合クエリ自体で構成される｡

7
00:00:43,930 --> 00:00:47,220
したがって､ 複合クルーは再帰的な性質を持っています｡ 

8
00:00:47,230 --> 00:00:52,060
リーフクエリの例としては､ 「果物」というカテゴリを持つ文書を検索することができる｡ 

9
00:00:52,090 --> 00:01:02,500
図にあるように､ 複合クエリの例としては､ 2つのリーフクエリをプルクエリで包んで､ 果物や野菜というカテゴリを持つ文書をマッチングさせることができる｡

10
00:01:02,770 --> 00:01:06,880
ご覧のように､ いくつかのリーフクエリを複合クエリでラップすることができます｡ 

11
00:01:07,300 --> 00:01:14,800
プルクエリにさらにリーフクエリを追加することでより複雑なクエリを作ることができますし､ boolクエリの中に他の複合クエリを入れ子にすることもできます｡

12
00:01:15,160 --> 00:01:19,720
ブール式クエリについては､ コースの後半で少し触れますが､ これは複合クエリの例を示して､

13
00:01:19,720 --> 00:01:24,280
リーフクエリとの違いを理解してもらうためのものです｡

14
00:01:24,820 --> 00:01:25,750
話はもういい｡ 

15
00:01:25,750 --> 00:01:29,980
さっそく､ クエリdstlを使って最初の検索クエリを書いてみましょう｡ 

16
00:01:30,340 --> 00:01:37,870
リクエストUIは､ クエリdstlで検索する際にクエリパラメータがないことを除けば､ 粗い文字列検索を行う場合と同じになります｡

17
00:01:38,020 --> 00:01:46,810
そこで再び､ jet HTTP動詞とインデックス名とタイプと検索APIを使用することにします｡ 

18
00:01:47,110 --> 00:01:52,600
次の行では､ 隣接するオブジェクトと､ queryという名前のネストされたオブジェクトの中にクエリを追加します｡ 

19
00:01:53,960 --> 00:01:57,160
このオブジェクトの中で､ クエリを定義します｡ 

20
00:01:57,170 --> 00:02:05,240
検索を定義する一般的な構造は､ キーとしてクエリ名を指定し､ 値としてクエリ定義の値を指定するものである｡

21
00:02:05,630 --> 00:02:06,710
だから､ 最初はゆっくりでいいんです｡ 

22
00:02:06,710 --> 00:02:10,700
すべてのクエリにマッチするように､ 最もシンプルなクエリを使用してみましょう｡ 

23
00:02:10,730 --> 00:02:14,810
その名の通り､ すべてのドキュメントをマッチングさせます｡ 

24
00:02:15,170 --> 00:02:20,990
つまり､ 先ほど言ったように､ キーとしてクエリの名前を入力します｡ この場合､ match allになります｡ 

25
00:02:21,650 --> 00:02:29,090
この特定のクエリのマッチングには設定が必要ですが､ 他のクエリタイプの場合はそうではありません｡

26
00:02:29,390 --> 00:02:31,880
では､ さっそくクエリを実行してみましょう｡ 

27
00:02:32,950 --> 00:02:37,900
そして､ その結果を見ると､ 1000件すべての文書がクエリにマッチしていることがわかる｡ もちろん､

28
00:02:37,900 --> 00:02:39,580
これは期待通りの結果である｡

29
00:02:39,970 --> 00:02:43,480
しかし､ 検索結果内のこれらのフィールドは､ そもそも何を意味しているのでしょうか？

30
00:02:43,510 --> 00:02:45,920
それは､ 次回の講義でご紹介します｡ 

31
00:02:45,940 --> 00:02:49,360
さて､ クエリ DSL を使って最初の検索クエリを書きました｡ 
