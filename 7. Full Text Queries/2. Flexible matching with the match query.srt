1
00:00:02,480 --> 00:00:05,720
最初のフルテキストクエリは､ マッチクエリに注目する｡ 

2
00:00:05,750 --> 00:00:10,490
これは強力でシンプルなクエリですが､ 非常に柔軟なマッチングを可能にします｡ 

3
00:00:10,640 --> 00:00:15,050
Googleなど､ ユーザーが入力したクエリを検索する際に非常に便利です｡ 

4
00:00:15,680 --> 00:00:20,630
ご存知のように､ いくつかのレベルクエリは完全一致で使用されるため､ enumフィールドでフィルタリングする場合や､

5
00:00:20,630 --> 00:00:24,500
開発者としてコントロールできるクエリでフィルタリングする場合により便利です｡

6
00:00:24,920 --> 00:00:30,110
テキスト入力から直接来る検索クエリを扱う場合は､ マッチクエリの方が適している｡ 

7
00:00:30,680 --> 00:00:36,410
まず､ 人間が検索フィールドに書き込んだ可能性が非常に高い文章を検索するクエリから始めてみましょう｡

8
00:00:36,710 --> 00:00:51,410
だから､ レシピのデフォルトの検索を取得し､ 体全体とクエリのオブジェクトは､ 一致するクエリになり､ フィールドはタイトルになります｡

9
00:00:52,600 --> 00:00:59,650
そして､ パスタやスパゲッティを使ったレシピを入力しましょう｡ 

10
00:00:59,680 --> 00:01:01,690
おっと､ スパゲティだ｡ 

11
00:01:02,230 --> 00:01:03,700
そして実行しよう｡ 

12
00:01:04,210 --> 00:01:06,550
そして､ その結果をじっくりと検証してみましょう｡ 

13
00:01:07,310 --> 00:01:13,760
最初のマッチには､ スパゲッティという用語が2回､ パスタという用語が1回含まれており､ 高い関連性スコアが得られています｡

14
00:01:14,330 --> 00:01:16,880
スクロールして次のレシピへ

15
00:01:16,970 --> 00:01:21,740
タイトルにはパスタという言葉だけで､ 他の言葉は一切含まれていないことに注目してください｡ 

16
00:01:21,770 --> 00:01:25,370
その理由は､ マッチクエリがブールクエリであるためである｡ 

17
00:01:25,490 --> 00:01:32,150
内部的には､ この用語はデフォルトの演算子である "or "を使ったブール演算に使われるのですが､

18
00:01:32,150 --> 00:01:35,870
これ以上のことが起こるので単純化しています｡

19
00:01:36,530 --> 00:01:42,200
デフォルトの演算子はorなので､ 検索するフィールドにすべての用語が現れる必要はありませんが､

20
00:01:42,200 --> 00:01:45,110
現れる用語が多いほど関連性は高くなります｡

21
00:01:45,590 --> 00:01:52,280
これは､ おそらくwith dirなどのフィラーワードを必要としないので､ 便利です｡  を立ち会わせる｡ 

22
00:01:52,610 --> 00:01:59,030
それは､ それらの単語は関連性という点では重要ではなく､ クエリーを書く人によって異なる可能性があるからです｡

23
00:01:59,300 --> 00:02:04,880
文の場合､ バリエーションが多いため､ マッチングが予測できなくなる可能性があり､

24
00:02:04,880 --> 00:02:14,270
重要でない単語まで含めると､ 関連性が高い文書があっても､ マッチングしない場合がある｡

25
00:02:14,630 --> 00:02:21,200
それに､ 関連スコアの要因の一つである逆文書頻度を思い出したのではないだろうか｡ 

26
00:02:21,500 --> 00:02:32,090
これは､ インデックス内に何度も出現する単語の重要度や関連度を下げるものであり､ これらのフィラーワードは関連性に関して特に問題を起こさないということを意味する｡

27
00:02:32,540 --> 00:02:36,650
したがって､ 通常､ ブーリアン演算子はデフォルト値のままにしておきたいところです｡ 

28
00:02:36,650 --> 00:02:39,740
しかし､ 万が一､ 変更したい場合は､ 実はそれが可能なのです｡ 

29
00:02:39,770 --> 00:02:40,790
見てみましょう｡ 

30
00:02:41,330 --> 00:02:43,310
そこで､ このクエリをコピーすることにします｡ 

31
00:02:43,730 --> 00:02:51,380
少し再構成する必要があるので､ この文章をカットして､ このプロパティをオブジェクトに変更することにします｡ 

32
00:02:52,420 --> 00:03:00,640
そして､ 先ほどのThe Simpsonsのような風変わりなものを追加し､ operatorキーを追加して､

33
00:03:00,640 --> 00:03:06,100
デフォルトのendに設定します｡

34
00:03:06,340 --> 00:03:12,670
このため､ クエリに含まれるすべての用語がドキュメントのタイトルフィールドに存在しなければ､ マッチングしない｡

35
00:03:13,030 --> 00:03:16,560
その結果､ クエリにマッチする文書はもはや存在しない｡ 

36
00:03:16,570 --> 00:03:23,730
スパゲッティとパスタの両方の用語がタイトルに含まれているレシピでも､ そのレシピは関連性が高かったのです｡

37
00:03:23,740 --> 00:03:26,590
だから､ 私たちの変化は､ おそらく良い方向には向かわないでしょう｡ 

38
00:03:27,010 --> 00:03:29,260
それ以外の場合は､ 役に立つかもしれませんが｡ 

39
00:03:29,530 --> 00:03:34,360
もし､ 先にクエリを定義できるのであれば､ コード内にクエリを埋め込み､ クエリにユーザー入力を使用しない場合などには､

40
00:03:34,360 --> 00:03:38,080
確かに便利かもしれません｡

41
00:03:38,470 --> 00:03:44,440
エンドオペレータはそのままにして､ クエリを短くして､ 何もマッチしない原因となる部分を取り除いてみましょう｡

42
00:03:44,710 --> 00:03:48,310
だから､ 最初の2語は削除する｡ 

43
00:03:48,490 --> 00:03:53,620
そこで､ パスタやスパゲッティという単語だけにして､ もう一度クエリを実行します｡ 

44
00:03:54,040 --> 00:03:59,500
つまり､ この修正されたクエリは､ タイトルに3つの語句がすべて含まれる1つのドキュメントにマッチするようになったのです｡ 

45
00:03:59,950 --> 00:04:00,370
素晴らしい｡ 

46
00:04:00,370 --> 00:04:04,270
しかし､ クエリで秋を削除するとどうなるか見てみましょう｡ 

47
00:04:04,780 --> 00:04:08,800
では､ これを取り除いて､ もう一度クエリを実行してみましょう｡ 

48
00:04:09,340 --> 00:04:15,070
結果を見てわかるように､ 両方の用語がタイトルフィールドに表示されるため､ ドキュメントはまだ一致します｡

49
00:04:15,490 --> 00:04:20,860
私が示したかったのは､ まだ用語の検索であって､ 文章全体の検索ではないということです｡ 

50
00:04:20,860 --> 00:04:23,290
だから､ 今でもドキュメントが一致するわけです｡ 

51
00:04:23,500 --> 00:04:28,750
また､ クエリ内で用語を入れ替えても､ ドキュメントは問題なく一致します｡ 

52
00:04:29,290 --> 00:04:36,730
マッチクエリに入力した原油は､ フィールドマッピング内で指定されたアナライザーを使って解析されることを覚えておいてください｡

53
00:04:36,940 --> 00:04:42,010
これはもちろん､ 先ほど見た分析されない用語レベルのクエリとは異なります｡ 

54
00:04:42,400 --> 00:04:44,650
以上が､ マッチクエリの基本でしたね｡ 
