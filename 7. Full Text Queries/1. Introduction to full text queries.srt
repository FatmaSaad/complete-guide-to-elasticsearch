1
00:00:02,280 --> 00:00:08,150
前のセクションでは､ 完全一致のために使用される用語レベルのクエリをいくつか見てきました｡ 

2
00:00:08,160 --> 00:00:14,580
長いテキストフィールドを検索するためにターミナルレベルのクエリを使用することは可能ですが､ 通常それは行いたいことではありません｡

3
00:00:14,940 --> 00:00:18,810
ご存知の通り､ 完全一致にはタームレベルクエリが使われるからです｡ 

4
00:00:19,260 --> 00:00:26,130
フルテキストクエリを使用するフィールドの例としては､ ブログ記事､ 記事､ 説明文などが挙げられます｡

5
00:00:26,400 --> 00:00:31,830
用語レベルクエリとフルテキストクエリの違いについては既にお話しましたので､ これ以上お時間を取らせたくないので､

6
00:00:31,830 --> 00:00:34,080
この辺で｡

7
00:00:34,530 --> 00:00:39,570
ただし､ このセクションのために新しいテストデータを用意しました｡ このテストデータは､

8
00:00:39,570 --> 00:00:44,880
この講義に添付されていますし､ GitHubリポジトリにもあります｡

9
00:00:45,270 --> 00:00:49,830
このテストデータはすでにインポートしており､ その方法は何度か見たことがあるはずです｡ 

10
00:00:49,920 --> 00:00:56,790
いくつかのフルテキストクエリを書く前に､ データをrecipeというインデックスにデフォルトのタイプで追加しました｡ 

11
00:00:56,820 --> 00:01:01,460
新しいレシピインデックスに追加されたマッピングを少し見てみましょう｡ 

12
00:01:01,470 --> 00:01:05,310
インデックスやマッピングを先に作成せずに､ データを取り込んだだけです｡ 

13
00:01:05,310 --> 00:01:10,830
そこで､ ダイナミックマッピングを使って､ Elasticsearchに適切なマッピングの追加を任せています｡

14
00:01:11,220 --> 00:01:13,260
では､ どのようなものか見てみましょう｡ 

15
00:01:13,350 --> 00:01:19,560
インデックス名はrecipe､ タイプはdefaultsで､ マッピングAPIを使用することにします｡ 

16
00:01:21,230 --> 00:01:24,260
まず､ 作成されたフィールドがあり､ これは日付です｡ 

17
00:01:24,290 --> 00:01:29,120
Elasticsearchがデータ検出により自動的に日付フォーマットを追加していることが分かります｡ 

18
00:01:29,390 --> 00:01:35,270
また､ descriptionフィールドもあり､ こちらもキーワードをマッピングしていますが､ これはあまり有用ではないかもしれません｡ 

19
00:01:35,750 --> 00:01:38,690
しかし､ もっと興味深いのは､ 食材の分野です｡ 

20
00:01:38,720 --> 00:01:47,240
これは､ 実際には､ 成分の名前と量の両方を含むオブジェクトであり､ そのため､ これらのフィールドは､ プロパティオブジェクトの中にネストされているのである｡

21
00:01:47,570 --> 00:01:54,290
また､ 注目すべきは､ テストデータ内のドキュメントが､ 実際には､ 成分オブジェクトの配列を持っていることである｡ 

22
00:01:54,650 --> 00:01:59,300
このようにマッピングに表示されないのは､ デフォルトではフィールドが複数の値を持つ可能性があるためで､

23
00:01:59,300 --> 00:02:02,450
Elasticsearchに配列データ型がないのはこのためです｡

24
00:02:02,840 --> 00:02:06,530
以前にも聞いたことがあると思いますが､ その一例を紹介します｡ 

25
00:02:06,740 --> 00:02:11,030
それ以外のマッピングは､ 本当に特別なものではなく､ 以前にも似たようなものを見たことがあるはずです｡ 

26
00:02:11,300 --> 00:02:18,810
私たちは､ レシピが何分かかるか､ レシピが何人分かを表す数など､ 評価を準備するために持っています｡

27
00:02:18,830 --> 00:02:20,570
特に異常はありません｡ 

28
00:02:20,570 --> 00:02:23,090
では､ さっそくフルテキストクエリを書いてみましょう｡ 
