1
00:00:02,490 --> 00:00:07,650
先ほど､ デフォルトで用語を操作するマッチクエリの使い方を説明しました｡ 

2
00:00:07,650 --> 00:00:11,820
検索対象のフィールドにいずれかの用語が含まれていれば､ ドキュメントはマッチします｡ 

3
00:00:11,820 --> 00:00:17,190
しかし､ マッチクエリですべての用語が存在することを要求するように変更する方法も見たはずです｡ 

4
00:00:17,190 --> 00:00:22,770
用語の出現順序や､ 一致する2つの用語の間に他の用語があるかどうかは関係ない｡

5
00:00:22,770 --> 00:00:29,580
しかし､ フレーズをマッチングさせたいとしたらどうでしょう｡  e. を特定の順番で並べることは､ match underscore

6
00:00:29,580 --> 00:00:33,450
phraseというマッチクエリのバリエーションで簡単にできる｡

7
00:00:33,750 --> 00:00:39,810
私が言ったように､ このクエリは､ フレーズ､ iにマッチします｡  e. 単語の羅列､ またはより正式な用語｡ 

8
00:00:40,290 --> 00:00:46,290
スパゲッティという単語で検索すると､ テストデータにあるものと一致するオスカーが表示される例を見てみよう｡

9
00:00:46,350 --> 00:00:52,710
つまり､ クエリはスコアフレーズにマッチしており､ それはオブジェクトであるべきなのです｡ 

10
00:00:52,710 --> 00:00:56,400
例によって､ フィールドはタイトルになります｡ 

11
00:00:57,390 --> 00:01:00,900
そして､ さっきも言ったように､ クエリーはスパゲティーのプーです｡ 

12
00:01:01,380 --> 00:01:02,670
のようなニスカ｡ 

13
00:01:02,670 --> 00:01:05,010
では､ 実行してみましょう｡ 

14
00:01:08,860 --> 00:01:13,180
つまり､ このクエリは､ 検索対象のフレーズで始まる1つの文書にマッチします｡ 

15
00:01:13,480 --> 00:01:16,900
では､ この2つの用語を入れ替えてみて､ その結果を見てみましょう｡ 

16
00:01:21,190 --> 00:01:23,410
これで､ ドキュメントが一致しなくなった｡ 

17
00:01:23,590 --> 00:01:28,930
それは､ フレーズ一致クエリの場合は､ マッチクエリとは異なり､ 用語の順番が重要だからです｡ 

18
00:01:29,170 --> 00:01:34,990
つまり､ Anezkaとspaghettiの両方の単語がタイトルフィールドにこの順番で表示され､ その間に他の単語がなければ､

19
00:01:34,990 --> 00:01:37,720
このクエリはマッチしないのです｡
